#!/bin/sh

is_linux () {
  [[ $('uname') == 'Linux' ]];
}

is_osx () {
  [[ $('uname') == 'Darwin' ]]
}

# install vundle for vim
if [ ! -e $HOME/.vim/bundle/Vundle.vim ]; then
  git clone https://github.com/gmarik/Vundle.vim.git $HOME/.vim/bundle/Vundle.vim
fi
vim -u $HOME/.vimrc.bundles +PluginInstall +PluginClean! +qa

# make sure .vim/backups and .vim/swaps exist
mkdir -p $HOME/.vim/backups
mkdir -p $HOME/.vim/swaps
mkdir -p $HOME/.vim/undo

# install antigen utility for zshrc
if [ ! -e $HOME/.antigen/ ]; then
  mkdir $HOME/.antigen
  curl -L https://raw.githubusercontent.com/zsh-users/antigen/master/antigen.zsh > $HOME/.antigen/antigen.zsh
fi

# install tmux plugin manager (https://github.com/tmux-plugins/tpm)
if [ ! -e $HOME/.tmux/plugins/tpm ]; then
  mkdir -p ~/.tmux/plugins;
  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
fi

# OS X dependencies
if is_osx; then
  # install reattach-to-user-namespace on OS X
  # this is a required dependency for tmux-yank plugin
  if ! hash reattach-to-user-namespace 2>/dev/null; then
    brew install reattach-to-user-namespace
  fi
  if ! hash ctags 2>/dev/null; then
    brew install ctags
  fi
fi

# todo: check modified time to know if we need to install plugins?
if [ -e $HOME/.tmux/plugins/tpm ]; then
  # https://github.com/tmux-plugins/tpm/wiki/Installing-plugins-via-the-command-line-only
  # start a server but don't attach to it
  tmux start-server
  # create a new session but don't attach to it either
  tmux new-session -d
  # install the plugins
  ~/.tmux/plugins/tpm/scripts/install_plugins.sh
fi

# install YouCompleteMe vim plugin (requires compilation)
YCM_PATH=$HOME/.vim/bundle/YouCompleteMe
YCM_BUILD_SCRIPT=$YCM_PATH/third_party/ycmd/build.sh
# todo: linux/win extensions is not .so... detect os and chose correct file
YCM_SHARED_LIB=$YCM_PATH/third_party/ycmd/ycm_core.so
if [ -e $YCM_PATH ]; then
  if [ ! -e $YCM_BUILD_SCRIPT ]; then
    cd $YCM_PATH && git submodule update --init --recursive
  fi
  # don't recompile if already compiled
  if [ ! -e $YCM_SHARED_LIB ]; then
    $YCM_BUILD_SCRIPT
  fi
fi
